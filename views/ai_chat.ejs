<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Green Helper â€¢ MyGreenHome</title>
    <link rel="stylesheet" href="/styles/dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <style>
        body {
            background-color: #eef2f7;
            font-family: Arial, sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .chat-container {
            max-width: 800px;
            margin: 30px auto;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            flex-grow: 1; /* Allows it to take available height */
            min-height: 60vh; /* Minimum height for chat area */
        }
        .chat-header {
            background-color: #4CAF50;
            color: white;
            padding: 15px 20px;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            font-size: 1.5em;
            font-weight: bold;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .chat-messages {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto; /* Scrollable message area */
            display: flex;
            flex-direction: column;
            gap: 15px;
            background-color: #f8f8f8;
            border-bottom: 1px solid #eee;
        }
        .message-bubble {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 15px;
            line-height: 1.5;
            word-wrap: break-word; /* Ensures long words wrap */
        }
        .message-bubble.user-message {
            background-color: #007bff;
            color: white;
            align-self: flex-end; /* Align to the right */
            border-bottom-right-radius: 2px;
        }
        .message-bubble.ai-message {
            background-color: #e0e0e0;
            color: #333;
            align-self: flex-start; /* Align to the left */
            border-bottom-left-radius: 2px;
        }
        .chat-input-area {
            padding: 15px 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
            background-color: #fff;
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;
        }
        .chat-input-area input[type="text"] {
            flex-grow: 1;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 20px;
            font-size: 1em;
        }
        .chat-input-area button {
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 20px;
            padding: 10px 18px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s ease;
        }
        .chat-input-area button:hover:not(:disabled) {
            background-color: #45a049;
        }
        .chat-input-area button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="chat-container">
        <div class="chat-header">
            <i class="fas fa-robot"></i> AI Green Helper
        </div>
        <div class="chat-messages" id="chatMessages">
            </div>
        <div class="chat-input-area">
            <input type="text" id="userMessageInput" placeholder="Type your message..." autofocus>
            <button id="sendMessageButton" disabled>Send</button>
        </div>
    </div>

    <%- include('partials/footer') %>

    <script>
        const userMessageInput = document.getElementById('userMessageInput');
        const sendMessageButton = document.getElementById('sendMessageButton');
        const chatMessages = document.getElementById('chatMessages');

        // Access user's name from the EJS context (passed from the server)
        const userName = "<%= user.firstName || user.username %>"; 

        // Function to scroll chat to bottom
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Function to add a message to the chat display
        function addMessage(sender, message) {
            const bubble = document.createElement('div');
            bubble.classList.add('message-bubble');
            if (sender === 'user') {
                bubble.classList.add('user-message');
            } else {
                bubble.classList.add('ai-message');
            }
            // --- CRITICAL CHANGE HERE ---
            // Use innerHTML instead of textContent for AI messages to render HTML
            if (sender === 'ai') {
                bubble.innerHTML = message; // Use innerHTML for AI responses
            } else {
                bubble.textContent = message; // Use textContent for user messages
            }
            // --- END CRITICAL CHANGE ---
            chatMessages.appendChild(bubble);
            scrollToBottom();
        }

        // Enable/disable send button
        userMessageInput.addEventListener('input', () => {
            sendMessageButton.disabled = userMessageInput.value.trim() === '';
        });

        // Handle sending message
        sendMessageButton.addEventListener('click', sendMessage);
        userMessageInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter' && userMessageInput.value.trim() !== '') {
                sendMessage();
            }
        });

        async function sendMessage() {
            const message = userMessageInput.value.trim();
            if (message === '') return;

            addMessage('user', message);
            userMessageInput.value = ''; // Clear input
            sendMessageButton.disabled = true; // Disable button while processing

            try {
                const response = await fetch('/ai-chat/message', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: message }),
                });

                const data = await response.json();

                if (response.ok) {
                    addMessage('ai', data.response || "I'm having trouble responding right now.");
                } else {
                    addMessage('ai', `Error: ${data.error || 'Could not get response from AI.'}`);
                }
            } catch (error) {
                console.error('Error sending message to AI backend:', error);
                addMessage('ai', 'Oops! Something went wrong. Please try again later.');
            } finally {
                sendMessageButton.disabled = false;
                userMessageInput.focus(); 
            }
        }

        // Initial message on page load, and scroll to bottom
        window.addEventListener('load', () => {
            // Only add initial greeting if chat is empty (e.g., first load, not reloads from history)
            if (chatMessages.children.length === 0) {
                 addMessage('ai', `Hello ${userName}! I'm your AI Green Helper. How can I assist you with energy saving or understanding your bills today?`);
            }
            scrollToBottom();
        });
    </script>
</body>
</html>